Majority Element II

Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]


class Solution {
    public static boolean isGreaterThan(int nums[], int val){
        int count = 0;
        for(int elt:nums){
            if(elt == val)
                count++;
        }
        return count > nums.length/3;
    }
    
    public List<Integer> majorityElement(int[] nums) {
        int val1=nums[0];
        int count1=1;
        
        int val2=nums[0];
        int count2=0;
        
        for(int i=1; i<nums.length; i++){
            if(nums[i] == val1){
                count1++;
            }
            else if(nums[i] == val2){
                count2++;
            }
            else{
                if(count1 == 0){
                    val1 = nums[i];
                    count1 = 1;
                }
                else if(count2 == 0){
                    val2 = nums[i];
                    count2 = 1;
                }
                else{
                    count1--;
                    count2--;
                }
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        if(isGreaterThan(nums, val1)){
            result.add(val1);
        }
        if(val1 != val2 && isGreaterThan(nums, val2)){
            result.add(val2);
        }
        return result;
    }
}
